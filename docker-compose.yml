version: '3'

services:
  elasticsearch:
    # 官方推荐镜像，详见https://hub.docker.com/r/library/elasticsearch/
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    environment:
      - LOGSPOUT=ignore
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - /Users/undancer/docker-data/srv/docker/es:/usr/share/elasticsearch/data
    networks:
      - stack
    healthcheck:
      test: ['CMD', 'curl', '-f', '-u', 'elastic:changeme', 'http://localhost:9200']
  kibana:
    # 官方推荐镜像，详见https://hub.docker.com/r/library/kibana/
    image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    environment:
      - LOGSPOUT=ignore
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - stack
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5601/login']
  logstash:
    # 官方推荐镜像，详见https://hub.docker.com/r/library/logstash/
    image: docker.elastic.co/logstash/logstash:$ELASTIC_VERSION
    environment:
      - LOGSPOUT=ignore
    ports:
      - 5000:5000
      - 5000:5000/udp
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    networks:
      - stack
  logspout:
    image: gliderlabs/logspout:$LOGSPOUT_VERSION
    environment:
      - LOGSPOUT=ignore
      - DEBUG=true
    depends_on:
      - logstash
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - stack
    command: syslog://logstash:5000
    # command: syslog+tcp://logstash:5000


# volumes:

networks:
  stack:
